@using WineSales.Config
@using WineSales.Domain.Interactors
@inject IUserInteractor UserInteractor
@inject IPurchaseInteractor PurchaseInteractor
@inject ISaleInteractor SaleInteractor
@inject ISupplierWineInteractor SupplierWineInteractor
@inject ISupplierInteractor SupplierInteractor

<Modal @ref="supplierInfoModal">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Информация о поставщике @OneSupplier.Name</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <ListGroup Flush>
                <ListGroupItem Disabled>Страна: @OneSupplier.Country</ListGroupItem>
                <ListGroupItem Disabled>Опыт: @OneSupplier.Experience (лет)</ListGroupItem>

                @if (@OneSupplier.License)
                {
                    <ListGroupItem Disabled>Лицензия: есть</ListGroupItem>
                }
                else
                {
                    <ListGroupItem Disabled>Лицензия: нет</ListGroupItem>
                }
            </ListGroup>
        </ModalBody>
        <ModalFooter>
        </ModalFooter>
    </ModalContent>
</Modal>

<Card>
    <CardBody>
        <CardTitle Size="5">@OneWine.Kind @OneWine.Color</CardTitle>
        <CardText>
            <ListGroup Flush>
                <ListGroupItem Disabled>Объем: @OneWine.Volume л</ListGroupItem>
                <ListGroupItem Disabled>Сахар: @OneWine.Sugar</ListGroupItem>
                <ListGroupItem Disabled>Алкоголь: @OneWine.Alcohol %</ListGroupItem>
                <ListGroupItem Disabled>Выдержка: @OneWine.Aging лет</ListGroupItem>
                <ListGroupItem>@OnePrice</ListGroupItem>
            </ListGroup>
        </CardText>

        @if (@Full)
        {
            <Button Color="Color.Primary" Clicked="@GetSupplierInfo">О поставщике</Button>
            <Button Color="Color.Primary" Clicked="@BuyWine">Купить</Button>
        }
    </CardBody>
</Card>

@code {
    [Parameter] public int SupplierWineID { get; set; }
    [Parameter] public Wine OneWine { get; set; }
    [Parameter] public double OnePrice { get; set; }
    [Parameter] public Supplier OneSupplier { get; set; }
    [Parameter] public bool Full { get; set; }

    private Modal? supplierInfoModal;
    User nowUser;

    private void GetSupplierInfo()
    {
        supplierInfoModal.Show();
    }

    private Task BuyWine()
    {
        nowUser = UserInteractor.GetNowUser();

        Purchase purchase = new Purchase
        {
            Price = OnePrice,
            Status = (int)PurchaseConfig.Statuses.Active,
            CustomerID = nowUser.RoleID
        };

        PurchaseInteractor.CreatePurchase(purchase);
        Purchase createdPurchase = PurchaseInteractor.GetActive(nowUser.RoleID, OnePrice);

        SupplierWine supplierWine = SupplierWineInteractor.GetByID(SupplierWineID);

        Sale sale = new Sale
        {
            PurchasePrice = OnePrice,
            Costs = SaleConfig.MinCosts,
            WineNumber = WineConfig.MinNumber,
            Date = new DateOnly(),
            PurchaseID = createdPurchase.ID,
            SupplierWineID = SupplierWineID
        };

        SaleInteractor.CreateSale(sale, supplierWine.Percent);

        return Task.CompletedTask;
    }
}