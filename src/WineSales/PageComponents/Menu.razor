@inject NavigationManager NavigationManager
@inject WineSales.Domain.Interactors.IUserInteractor UserInteractor

<Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Light"
     ThemeContrast="ThemeContrast.Light">
    <BarBrand>
        WineSales
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="/">Главная</BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="catalog">Каталог вин</BarLink>
            </BarItem>
            @if (nowUser.Role == "customer")
            {
                <BarItem>
                    <BarLink To="rating">Рейтинг вин</BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="purchases">Мои покупки</BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="bonusCard">Бонусная карта</BarLink>
                </BarItem>
            }
            else if (nowUser.Role == "supplier")
            {
                <BarItem>
                    <BarLink To="supplierWines">Мои вина</BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="supplierSales">Мои продажи</BarLink>
                </BarItem>
            }
            else if (nowUser.Role == "admin")
            {
                <BarItem>
                    <BarLink To="adminSupplierWines">Вина</BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="adminSales">Продажи</BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="suppliers">Поставщики</BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="users">Аккаунты</BarLink>
                </BarItem>
            }
        </BarStart>
        <BarEnd>
            @if (nowUser.Role == "guest")
            {
                <BarItem>
                    <Button Color="Color.Primary" Clicked="@ShowLogin">Вход в аккаунт</Button>
                    <Button Color="Color.Primary" Clicked="@ShowCustomerRegistration">Регистрация покупателя</Button>
                    <Button Color="Color.Primary" Clicked="@ShowSupplierRegistration">Регистрация поставщика</Button>
                </BarItem>
            }
            else
            {
                @if (nowUser.Role == "customer")
                {
                    <BarItem> 
                        <Button Color="Color.Danger" Clicked="@DeleteAccount">Удалить аккаунт</Button>
                        <Button Color="Color.Primary" Clicked="@SignOut">Выход из аккаунта</Button>
                    </BarItem>
                }
                else
                {
                    <BarItem>                 
                        <Button Color="Color.Primary" Clicked="@SignOut">Выход из аккаунта</Button>
                    </BarItem>                    
                }
            }
        </BarEnd>
    </BarMenu>
</Bar>

<Login @ref=@loginModal/>
<CustomerRegistration @ref=@customerRegistrationModal/>
<SupplierRegistration @ref=@supplierRegistrationModal/>

@code{
    private Login? loginModal;
    private CustomerRegistration? customerRegistrationModal;
    private SupplierRegistration? supplierRegistrationModal;

    private User nowUser;

    protected override void OnInitialized()
    {
        nowUser = UserInteractor.GetNowUser();
        Console.WriteLine(nowUser.Role);
    }

    Task ShowLogin()
    {
        loginModal?.ShowModal();
        return Task.CompletedTask;
    }

    Task ShowCustomerRegistration()
    {
        customerRegistrationModal?.ShowModal();
        return Task.CompletedTask;
    }

    Task ShowSupplierRegistration()
    {
        supplierRegistrationModal?.ShowModal();
        return Task.CompletedTask;
    }

    public void SignOut()
    {
        User guestUser = new User("guest", "guest", "guest");
        UserInteractor.SetNowUser(guestUser);
        nowUser = UserInteractor.GetNowUser();

        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

    public void DeleteAccount()
    {
        nowUser = UserInteractor.GetNowUser();
        UserInteractor.DeleteUser(nowUser);

        User guestUser = new User("guest", "guest", "guest");
        UserInteractor.SetNowUser(guestUser);
        nowUser = UserInteractor.GetNowUser();

        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
