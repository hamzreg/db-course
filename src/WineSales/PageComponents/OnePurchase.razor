@using WineSales.Domain.Interactors

@inject NavigationManager NavigationManager
@inject ISaleInteractor SaleInteractor

<TableRow>
    <TableRowCell>@OneWine.Kind</TableRowCell>
    <TableRowCell>@OneWine.Color</TableRowCell>
    <TableRowCell>@OneWine.Volume</TableRowCell>
    <TableRowCell>@OneWine.Sugar</TableRowCell>
    <TableRowCell>@OneWine.Alcohol</TableRowCell>
    <TableRowCell>@OneWine.Aging</TableRowCell>
    <TableRowCell>@OnePrice</TableRowCell>
    <TableRowCell>@OneDate</TableRowCell>
</TableRow>
<Button Color="Color.Danger" Clicked="@CancelPurchase">Отменить</Button>

@code {
    [Parameter] public Wine OneWine { get; set; }
    [Parameter] public double OnePrice { get; set; }
    [Parameter] public DateOnly OneDate { get; set; }
    [Parameter] public int PurchaseID { get; set; }

    private Task CancelPurchase()
    {
        Log.Information("Button <CancelPurchase> clicked.");

        Sale sale = SaleInteractor.GetByPurchaseID(PurchaseID);
        SaleInteractor.DeleteSale(sale);

        NavigationManager.NavigateTo(NavigationManager.Uri, true);
        return Task.CompletedTask;
    }
}
