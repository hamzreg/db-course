@using WineSales.Domain.Interactors

@inject NavigationManager NavigationManager
@inject ISaleInteractor SaleInteractor
@inject ICheckInteractor CheckInteractor

<Modal @ref="checkModal">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Чек</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <ListGroup Flush>
                <ListGroupItem Disabled>Смена: @OneCheck.ShiftNumber</ListGroupItem>
                <ListGroupItem Disabled>Способ оплаты: @OneCheck.PaymentMethod</ListGroupItem>
            </ListGroup>
        </ModalBody>
        <ModalFooter>
        </ModalFooter>
    </ModalContent>
</Modal>

<TableRow>
    <TableRowCell>@OneWine.Kind</TableRowCell>
    <TableRowCell>@OneWine.Color</TableRowCell>
    <TableRowCell>@OneWine.Volume</TableRowCell>
    <TableRowCell>@OneWine.Sugar</TableRowCell>
    <TableRowCell>@OneWine.Alcohol</TableRowCell>
    <TableRowCell>@OneWine.Aging</TableRowCell>
    <TableRowCell>@OnePrice</TableRowCell>
    <TableRowCell>@OneDate</TableRowCell>
</TableRow>

<Bar Breakpoint="Breakpoint.Desktop"
    ThemeContrast="ThemeContrast.Light">
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <Button Color="Color.Danger" Clicked="@CancelPurchase">Отменить</Button>
                <Button Color="Color.Primary" Clicked="@GetCheck">Получить чек</Button>
            </BarItem>
        </BarStart>
    </BarMenu>
</Bar>

@code {
    [Parameter] public Wine OneWine { get; set; }
    [Parameter] public double OnePrice { get; set; }
    [Parameter] public DateOnly OneDate { get; set; }
    [Parameter] public Check OneCheck { get; set; }
    [Parameter] public int PurchaseID { get; set; }

    private Modal? checkModal;

    private Task CancelPurchase()
    {
        Log.Information("Button <CancelPurchase> clicked.");

        Sale sale = SaleInteractor.GetByPurchaseID(PurchaseID);
        SaleInteractor.DeleteSale(sale);

        Check check = CheckInteractor.GetByPurchase(PurchaseID);
        CheckInteractor.DeleteCheck(check);

        NavigationManager.NavigateTo(NavigationManager.Uri, true);
        return Task.CompletedTask;
    }

    private void GetCheck()
    {
        Log.Information("Button <GetCheck> clicked.");
        checkModal.Show();
    }
}
