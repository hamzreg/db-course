@page "/supplierWines"

@using WineSales.Domain.Interactors
@inject IUserInteractor UserInteractor
@inject ISupplierWineInteractor SupplierWineInteractor
@inject ISupplierInteractor SupplierInteractor

@if (nowUser.Role != "supplier")
{
    <Jumbotron Background="Background.Light" Margin="Margin.Is4.FromBottom">
        <JumbotronSubtitle>
            Для просмотра этой страницы необходимо войти в аккаунт поставщика.
        </JumbotronSubtitle>
    </Jumbotron>
}
else if (!supplier.License)
{
    <Jumbotron Background="Background.Light" Margin="Margin.Is4.FromBottom">
        <JumbotronSubtitle>
            Для поставки вин необходима лицензия. Администратор еще не выдал Вам лицензию.
        </JumbotronSubtitle>
    </Jumbotron>
}
else
{
    <Jumbotron Background="Background.Light" Margin="Margin.Is4.FromBottom">
        <JumbotronTitle Size="JumbotronTitleSize.Is4">Мои вина</JumbotronTitle>
        <Divider></Divider>
    </Jumbotron>
    
    <Bar Breakpoint="Breakpoint.Desktop"
         Background="Background.Light"
         ThemeContrast="ThemeContrast.Light">
         <BarToggler />
            <BarMenu>
                <BarStart>
                    <BarItem>
                        <Button Color="Color.Primary" Clicked="@ShowModalAddWine">Добавить вино</Button>
                    </BarItem>
                </BarStart>
            </BarMenu>
    </Bar>

    <Table>
        <TableHeader>
            <TableRow>
                <TableHeaderCell>Сорт</TableHeaderCell>
                <TableHeaderCell>Цвет</TableHeaderCell>
                <TableHeaderCell>Объем (л)</TableHeaderCell>
                <TableHeaderCell>Сахар</TableHeaderCell>
                <TableHeaderCell>Алкоголь (%)</TableHeaderCell>
                <TableHeaderCell>Выдержка (лет)</TableHeaderCell>
                <TableHeaderCell>Процент</TableHeaderCell>
                <TableHeaderCell>Цена (₽)</TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @for (int i = 0; i < wines.Count; i++)
            {
                <OneSupplierWine OneWine="wines[i]" SupplierWineItem="supplierWines[i]"></OneSupplierWine>
            }
        </TableBody>
    </Table>
}

<ModalAddWine @ref=@addWineModal/>

@code {
    private ModalAddWine? addWineModal;

    private List<Wine> wines = new List<Wine>();
    private List<SupplierWine> supplierWines = new List<SupplierWine>(); 

    User nowUser;
    Supplier supplier;

    protected override void OnInitialized()
    {
        nowUser = UserInteractor.GetNowUser();
        int supplierID = nowUser.RoleID;
        supplier = SupplierInteractor.GetByID(supplierID);
        (wines, supplierWines) = SupplierWineInteractor.GetBySupplierID(supplierID);
        base.OnInitialized();
    }

    Task ShowModalAddWine()
    {
        addWineModal?.ShowModal();
        return Task.CompletedTask;
    }
}
